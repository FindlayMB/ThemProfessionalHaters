{"version":3,"file":"react-oauth-flow.js","sources":["../src/utils/fetch.js","../src/utils/index.js","../src/createOauthFlow/index.js"],"sourcesContent":["const defineStaticProp = (obj, key, value) => {\n  Object.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: false,\n    writable: false,\n    value,\n  });\n\n  return obj;\n};\n\nexport function fetch2(url, opts) {\n  const request = fetch(url, opts);\n  return request\n    .then(response => {\n      if (!response.ok) throw response;\n      return response.json();\n    })\n    .catch(err =>\n      err.json().then(errJSON => {\n        const error = new Error(err.statusText);\n        defineStaticProp(error, 'response', err);\n        defineStaticProp(error.response, 'data', errJSON);\n        defineStaticProp(error, 'request', request);\n\n        throw error;\n      }),\n    );\n}\n","import qs from 'qs';\nimport { fetch2 } from './fetch';\n\nfunction buildURL(url, params) {\n  if (params == null) return url;\n\n  const serializedParams = qs.stringify(params)\n  if (!serializedParams) return url;\n  \n  return `${url}${url.indexOf('?') < 0 ? '?' : '&'}${serializedParams}`;\n}\n\nexport { buildURL, fetch2 };\n","import * as React from 'react';\nimport { OauthReceiver } from '../OauthReceiver';\nimport { OauthSender } from '../OauthSender';\n\nexport function createOauthFlow(\n  { authorizeUrl, tokenUrl, clientId, clientSecret, redirectUri, appName } = {},\n) {\n  const Sender = props => (\n    <OauthSender\n      authorizeUrl={authorizeUrl}\n      clientId={clientId}\n      redirectUri={redirectUri}\n      {...props}\n    />\n  );\n\n  const Receiver = props => (\n    <OauthReceiver\n      tokenUrl={tokenUrl}\n      clientId={clientId}\n      clientSecret={clientSecret}\n      redirectUri={redirectUri}\n      appName={appName}\n      {...props}\n    />\n  );\n\n  return {\n    Sender,\n    Receiver,\n  };\n}\n"],"names":["defineStaticProp","obj","key","value","Object","defineProperty","enumerable","configurable","writable","buildURL","url","params","const","serializedParams","qs","stringify","indexOf","opts","request","fetch","then","response","ok","json","catch","err","errJSON","error","Error","statusText","ref","props"],"mappings":"2IAAMA,WAAoBC,EAAKC,EAAKC,GAQlC,OAPAC,OAAOC,eAAeJ,EAAKC,GACzBI,YAAY,EACZC,cAAc,EACdC,UAAU,QACVL,IAGKF,GCLT,SAASQ,EAASC,EAAKC,GACrB,GAAc,MAAVA,EAAgB,OAAOD,EAE3BE,IAAMC,EAAmBC,EAAGC,UAAUJ,GACtC,OAAKE,EAEKH,GAAMA,EAAIM,QAAQ,KAAO,EAAI,IAAM,KAAMH,EAFrBH,8/BDIzB,SAAgBA,EAAKO,GAC1BL,IAAMM,EAAUC,MAAMT,EAAKO,GAC3B,OAAOC,EACJE,cAAKC,GACJ,IAAKA,EAASC,GAAI,MAAMD,EACxB,OAAOA,EAASE,SAEjBC,eAAMC,UACLA,EAAIF,OAAOH,cAAKM,GACdd,IAAMe,EAAQ,IAAIC,MAAMH,EAAII,YAK5B,MAJA7B,EAAiB2B,EAAO,WAAYF,GACpCzB,EAAiB2B,EAAMN,SAAU,OAAQK,GACzC1B,EAAiB2B,EAAO,UAAWT,GAE7BS,s4EErBP,SACLG,yIAEeC"}